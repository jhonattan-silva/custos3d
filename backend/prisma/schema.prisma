// Schema do Prisma para sistema de precificação de peças 3D
// Documentação: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Modelo de usuários
model Usuario {
  id              String     @id @default(cuid())
  nome            String
  email           String     @unique
  senha           String?
  tipoPlano       String     @default("gratuito")
  status          String     @default("ativo")
  provedorOauth   String?
  idProvedorOauth String?
  roleId          Int?      @map("role_id")
  criadoEm        DateTime   @default(now())
  atualizadoEm    DateTime   @updatedAt
  
  // Relacionamentos
  role            Role?     @relation(fields: [roleId], references: [id])
  planilhas       Planilha[]
  maquinas        Maquina[]
  materiais       Material[]
  tiposMaoObra    TipoMaoObra[]
  
  @@map("usuarios")
}

// Modelo de roles
model Role {
  id              Int      @id @default(autoincrement())
  nome            String   @unique
  descricao       String?
  ativo           Boolean  @default(true)
  criadoEm        DateTime @default(now()) @map("criado_em")
  
  // Relacionamentos
  usuarios        Usuario[]
  rolePermissoes  RolePermissao[]
  
  @@map("roles")
}

// Modelo de permissões
model Permissao {
  id              Int      @id @default(autoincrement())
  nome            String   @unique
  descricao       String?
  modulo          String
  acao            String
  criadoEm        DateTime @default(now()) @map("criado_em")
  
  // Relacionamentos
  rolePermissoes  RolePermissao[]
  
  @@map("permissoes")
}

// Modelo de relacionamento role-permissões
model RolePermissao {
  id            Int      @id @default(autoincrement())
  roleId        Int      @map("role_id")
  permissaoId   Int      @map("permissao_id")
  criadoEm      DateTime @default(now()) @map("criado_em")
  
  // Relacionamentos
  role          Role     @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permissao     Permissao @relation(fields: [permissaoId], references: [id], onDelete: Cascade)
  
  @@unique([roleId, permissaoId])
  @@map("role_permissoes")
}

// Modelo de planilhas
model Planilha {
  id                    Int      @id @default(autoincrement())
  usuarioId             String   @map("usuario_id")
  nome                  String   @default("Minha Planilha")
  dadosBase             Json     @map("dados_base") // Colunas padrão e linhas básicas
  colunasPersonalizadas Json     @map("colunas_personalizadas") // Colunas adicionais para premium
  criadoEm              DateTime @default(now()) @map("criado_em")
  atualizadoEm          DateTime @updatedAt @map("atualizada_em")
  
  // Relacionamentos
  usuario Usuario @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  itens   ItemPlanilha[]
  
  @@map("planilhas")
}

// Itens da planilha (linhas)
model ItemPlanilha {
  id                   Int      @id @default(autoincrement())
  planilhaId           Int      @map("planilha_id")
  maquinaId            Int?     @map("maquina_id")
  materialId           Int?     @map("material_id")
  ordemItem            Int      @map("ordem_item")
  camposPadrao         Json     @map("campos_padrao")
  camposCalculados     Json     @map("campos_calculados")
  camposPersonalizados Json     @map("campos_personalizados")
  criadoEm             DateTime @default(now()) @map("criado_em")
  atualizadoEm         DateTime @updatedAt @map("atualizado_em")
  
  // Relacionamentos
  planilha Planilha @relation(fields: [planilhaId], references: [id], onDelete: Cascade)
  maquina  Maquina? @relation(fields: [maquinaId], references: [id])
  material Material? @relation(fields: [materialId], references: [id])

  @@map("itens_planilha")
}

// Equipamentos de produção (configurações do usuário)
model Maquina {
  id                 Int      @id @default(autoincrement())
  usuarioId          String   @map("usuario_id")
  nome               String
  marca              String?
  modelo             String?
  precoCompra        Float?   @map("preco_compra")
  custoEnergiaHora   Float    @default(0.15) @map("custo_energia_hora")
  taxaDepreciacao    Float    @default(0.1) @map("taxa_depreciacao")
  vidaUtilHoras      Int?     @map("vida_util_horas")
  consumoWatts       Int?     @map("consumo_watts")
  observacoes        String?
  ativa              Boolean  @default(true)
  criadoEm           DateTime @default(now()) @map("criado_em")
  atualizadoEm       DateTime @updatedAt @map("atualizado_em")
  
  // Relacionamentos
  usuario Usuario @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  itens   ItemPlanilha[]

  @@map("maquinas")
}

// Materiais/Insumos (configurações do usuário)
model Material {
  id                 Int      @id @default(autoincrement())
  usuarioId          String   @map("usuario_id")
  nome               String
  tipoMaterial       String   @map("tipo_material")
  precoUnidade       Float    @map("preco_unidade")
  unidadeMedida      String   @default("kg") @map("unidade_medida")
  cor                String?
  densidadeGCm3      Float?   @map("densidade_g_cm3")
  temperaturaImpressao Int?   @map("temperatura_impressao")
  fornecedor         String?
  ativo              Boolean  @default(true)
  criadoEm           DateTime @default(now()) @map("criado_em")
  atualizadoEm       DateTime @updatedAt @map("atualizado_em")
  
  // Relacionamentos
  usuario Usuario @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  itens   ItemPlanilha[]

  @@map("materiais")
}

// Tipos de serviço/mão de obra (configurações do usuário)
model TipoMaoObra {
  id              Int      @id @default(autoincrement())
  usuarioId       String   @map("usuario_id")
  nome            String
  categoria       String
  valorPorMinuto  Float    @map("valor_por_minuto")
  descricao       String?
  ativo           Boolean  @default(true)
  criadoEm        DateTime @default(now()) @map("criado_em")
  atualizadoEm    DateTime @updatedAt @map("atualizado_em")
  
  // Relacionamentos
  usuario Usuario @relation(fields: [usuarioId], references: [id], onDelete: Cascade)

  @@map("tipos_mao_obra")
}
